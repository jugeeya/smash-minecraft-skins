name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  plugin:
    env:
      PLUGIN_NAME: minecraft_skins
    runs-on: ubuntu-latest
    container: 
      image: jugeeya/cargo-skyline:2.1.0
    steps:
    - uses: actions/checkout@v2
    - name: install
      run: |
        apt update && apt install -y wget gdebi && wget https://github.com/devkitPro/pacman/releases/latest/download/devkitpro-pacman.amd64.deb &&     gdebi -n devkitpro-pacman.amd64.deb &&     rm devkitpro-pacman.amd64.deb &&     yes | dkp-pacman -Scc
    - name: install 2
      run: |
        PATH=$PATH:/opt/devkitpro/tools/bin dkp-pacman -Syyu --noconfirm switch-dev &&     dkp-pacman -S --needed --noconfirm switch-portlibs &&     dkp-pacman -S --needed --noconfirm devkitARM &&     yes | dkp-pacman -Scc
    - name: Build release NRO
      run: |
        PATH=$PATH:/root/.cargo/bin:/opt/devkitpro/tools/bin  RUST_BACKTRACE=1 /root/.cargo/bin/cargo-skyline skyline build --release
      env:
        HOME: /root
    - name: Upload plugin artifact
      uses: actions/upload-artifact@v2
      with:
        name: plugin
        path: target/aarch64-skyline-switch/release/lib${{env.PLUGIN_NAME}}.nro
#   upload:
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
#     needs:
#       - plugin
#     steps:
#     - name: Download all artifacts
#       uses: actions/download-artifact@v2
#     - name: Update Release
#       uses: meeDamian/github-release@2.0
#       with:
#         token: ${{ secrets.GITHUB_TOKEN }}
#         prerelease: true
#         allow_override: true
#         gzip: false
#         tag: beta
#         name: beta
#         body: >
#           Beta built off of the latest code in the repository. 
#         files: >
#           plugin/* 
